<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        ">
	  <!-- Hibernate4 -->
    <!-- 加载资源文件  其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载-->
    <context:property-placeholder location="classpath:persistence-mysql5.properties" />
        <context:component-scan base-package="net.ibizsys.psrt.srv" name-generator="net.ibizsys.paas.util.spring.AnnotationBeanNameGenerator">
      	</context:component-scan>
  
    
      	<context:component-scan base-package="com.sa.unip.srv" name-generator="net.ibizsys.paas.util.spring.AnnotationBeanNameGenerator">
           <context:exclude-filter type="custom" expression="com.sa.unip.srv.UniPSampleSysTypeFilter"/>
     	</context:component-scan> 
       
    <bean id="dbDialect"
        class="net.ibizsys.paas.db.impl.MySQL5DialectImpl">
    </bean>
  
    
    <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <!-- 可以加多个包 -->
                <value>com.sa.demo.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!--  <prop key="hibernate.current_session_context_class">thread</prop> --> 
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>   
            </props>
        </property>
    </bean>
    
    <!-- 配置国际化资源文件路径 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
      	 <property name="basename">
        	
            <!-- 定义消息资源文件的相对路径 -->
            <value>messages/message</value>
        </property>
    </bean>
    <!-- 基于Cookie的本地化解析器 -->
<!--      <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"> -->
<!--        <property name="cookieMaxAge" value="604800"/> -->
<!--        <property name="defaultLocale" value="zh_CN"/> -->
<!--        <property name="cookieName" value="Language"></property> -->
<!--      </bean> -->
    <!-- 基于Session的本地化解析器 -->
 	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" >
 		<property name="defaultLocale" value="zh_CN"/>
 	</bean>
   
   <bean id="dataSource" name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的驱动-->
	    <property name="driverClass" value="${jdbc.driverClassName}"/>
	    <!-- 指定连接数据库的URL-->
	    <property name="jdbcUrl" value="${jdbc.url}"/>
	    <!-- 指定连接数据库的用户名-->
	    <property name="user" value="${jdbc.user}"/>
	    <!-- 指定连接数据库的密码-->
	    <property name="password" value="${jdbc.pass}"/>
	    <!-- 指定连接池中保留的最大连接数. Default:15-->
	    <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
	    <!-- 指定连接池中保留的最小连接数-->
	    <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
	    <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
	    <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
	    <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
	    <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
	    <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
	    <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
	    <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。
	    但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->
	    <property name="maxStatements" value="${jdbc.maxStatements}"/>
	    <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
	    <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
	</bean>
	
   
    <!-- 配置Hibernate事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
   
   <!-- 配置事务异常封装 -->
   <bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
   
   <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
   	
  

</beans>